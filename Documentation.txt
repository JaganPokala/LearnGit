git important terminologies

Repo - folder of the project on which you are working which is tracked by git
there are 3 types of areas - 
working directory - this is where you make your changes
staging area - this is the area where we bring files from working directory and make 
               commit or take snapshot we do this using a command 
git Directory - this is the final repository , when we commit 

we can move from working directory to staging area by using add command 
when we do commit in staging area cur directory becomes git directory

push command - 
pull command - 
clone - 
merge - 
confilct , resolving confilct
     
cd.. go out side the current directoryls

first of all you have to initialize current dir as git repo
if you want to track using git 
.git folder holds all the info to track ur project 
this folder is created by git init command but u can't see it since it is hidden folder 

this is still showing as there are pending changes
this is because we r currently in working directory

git directory contains final files 
inorder to move from working dir to git dir we have to bring files from working dir to 
staging area by git add
for staging area to git dir -> git commit
?why do we use staging instead of directly commiting to gir dir

we can't commit without a message 
we can do this by using --allow-empty

if you ran the git init in the wrong folder what will you do, you can just dlt git
file which is hidden in the your repo

git status - is used to see what type of changes you have made in your repo

if you do git add . this will add all the changes instead of one by one

what i have learned today

about git and why it's created and why it's used 
some commands like 
- git init
- git add //add files from working dir to staging area
- git commit -m ""
- git status //to check what kind of changes are present
- git log //shows a log of all kind of commits we have made

/*----------------------------------------------
23/01/25 - it's almost a month in 2025 what i did in these 
days ??
done some easy cf problems trying to improve my spead?
did you observe any changes ?
yes i'm improving but still i have to imporve 
- u have to focus on your health 
- learn os 
- learn web dev for projects 
i'm willing to buy az 1 month if i buy that then there will
be no room for time waste i have to be strict with my schedule
from 24th onwards i have exams so if i buy today i have to 
finish dp graphs and all those projects with in 1 month 
it is definetly possible 
i'm buying it tommorow 

----------------

inorder to create a new folder we use mkdir 
if we want to create an empty file we can use touch filename.txt
if we want to create a file with some text we can use echo "some text here" > filename.txt

Learning about branching and merging :
used git graph for seeing what we are doing 
by default, default branch of any git repo is main branch 
git branch will show all the branches

how to create a new branch?
so now i want to learn about branching i wil go the yesterday's last commit and 
try to write today's documentation again 

how to create a new branch - git branch branchname
git branch -> to see all the branches which are present 
git checkout branchname -> to go to another branch 


??which branch does this file lies in?
?? if i modify where these changes appear, new branch or main branches?
currently i'm in 23-branch if i cummit these changes will be commited on 23-branch 

if you creae a new branch that doesn't mean you are creating new copy of that physically
also there won't be any copy you just have to do something there 

but what if i want to brach some previously commited brach, i don't need all info 
about after that commit??

git merge x - to merge branch x into the current branch we are in 

git checkout -b branchname - to directly create a branch and go to that branch

i modified in main brach instead of another branch and made a commit
how can i uncommit that ??

git reset --soft HEAD~1 if we just want to uncommit but keep the 
            changes stagged
git reset --mixed HEAD~1 if we want to uncommit and unstage the 
            changes but changes remain same 
git reset --hard HEAD~1 if we want to uncommit , unstage and discord
            the changes, once you do this changes can't be retrived

??new commit is made only when there is a mrege conflict??
??what is a merge editor and text editor?

so no i'm learning about undoing changes and recovering mistakes 

to discord all changes from working directory - git restore filename
but staged changes are not restored like that since they are being tracked??

git restore --staged filename -> to unstage the changes 
// -- this symbol is called flag ?

if you have committed the changes
git reset --soft hash of the commit we want to move to staged area

inorder to remove some commit in between which may cause some problems in 
feature we have to use revert instead of reset/restore 





25-01-25

Learining about GitHub
git remote add origin git@github.com:JaganPokala/LearnGit.git
remote - you are adding a link to a remote repository
add - key for adding
origin - aliasing name for the repo it's like key value pair
.git folder creates a key named origin by which we can access the link 

- add link using remote add origin link.git
- if there are files already do ->  git pull origin branchname
- if you want to push changes -> git push origin branchname
